{"ast":null,"code":"var _jsxFileName = \"/Users/amymoseman/Desktop/movieAppReact/movieApp/client/src/pages/Homepage.js\";\nimport React, { useEffect, useState } from 'react';\nimport API from '../utils/API';\nimport MovieCard from '../components/MovieCard/MovieCard';\nexport default function Homepage() {\n  const [data, setData] = useState([]);\n  const [isLoading, setisLoading] = useState(true);\n  useEffect(() => {\n    loadMovies();\n    setisLoading(false);\n  }, []);\n\n  function loadMovies() {\n    API.getMovies().then(res => {\n      console.log(res.json());\n      setData(res.data);\n    }).catch(err => console.log(err));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 25\n    }\n  }, \"Loading...\")) : Object.keys(data).map(movie => {\n    return /*#__PURE__*/React.createElement(MovieCard, {\n      key: data[movie].id,\n      poster: data[movie].poster,\n      title: data[movie].title,\n      year: movie.year,\n      rated: movie.rated,\n      awards: movie.awards,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 33\n      }\n    });\n  })));\n}","map":{"version":3,"sources":["/Users/amymoseman/Desktop/movieAppReact/movieApp/client/src/pages/Homepage.js"],"names":["React","useEffect","useState","API","MovieCard","Homepage","data","setData","isLoading","setisLoading","loadMovies","getMovies","then","res","console","log","json","catch","err","Object","keys","map","movie","id","poster","title","year","rated","awards"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AAGA,eAAe,SAASC,QAAT,GAAoB;AAC/B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,UAAU;AACVD,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAHQ,EAGN,EAHM,CAAT;;AAMA,WAASC,UAAT,GAAsB;AAClBP,IAAAA,GAAG,CAACQ,SAAJ,GACKC,IADL,CACUC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,EAAZ;AACAT,MAAAA,OAAO,CAACM,GAAG,CAACP,IAAL,CAAP;AACH,KAJL,EAKKW,KALL,CAKWC,GAAG,IAAIJ,OAAO,CAACC,GAAR,CAAYG,GAAZ,CALlB;AAMH;;AAGD,sBACI,uDACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKV,SAAS,gBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CADM,GAOFW,MAAM,CAACC,IAAP,CAAYd,IAAZ,EAAkBe,GAAlB,CAAsBC,KAAK,IAAI;AAC3B,wBACI,oBAAC,SAAD;AACI,MAAA,GAAG,EAAEhB,IAAI,CAACgB,KAAD,CAAJ,CAAYC,EADrB;AAEI,MAAA,MAAM,EAAEjB,IAAI,CAACgB,KAAD,CAAJ,CAAYE,MAFxB;AAGI,MAAA,KAAK,EAAElB,IAAI,CAACgB,KAAD,CAAJ,CAAYG,KAHvB;AAII,MAAA,IAAI,EAAEH,KAAK,CAACI,IAJhB;AAKI,MAAA,KAAK,EAAEJ,KAAK,CAACK,KALjB;AAMI,MAAA,MAAM,EAAEL,KAAK,CAACM,MANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAUH,GAXD,CARZ,CADJ,CADJ;AA6BH","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport API from '../utils/API';\nimport MovieCard from '../components/MovieCard/MovieCard'\n\n\nexport default function Homepage() {\n    const [data, setData] = useState([])\n    const [isLoading, setisLoading] = useState(true)\n\n    useEffect(() => {\n        loadMovies();\n        setisLoading(false);\n    }, []\n    );\n\n    function loadMovies() {\n        API.getMovies()\n            .then(res => {\n                console.log(res.json())\n                setData(res.data)\n            })\n            .catch(err => console.log(err))\n    }\n\n\n    return (\n        <>\n            <div>\n                {isLoading ? (\n                    <div>\n                        <span>Loading...</span>\n                    </div>\n                ) :\n\n                    (\n                        Object.keys(data).map(movie => {\n                            return (\n                                <MovieCard\n                                    key={data[movie].id}\n                                    poster={data[movie].poster}\n                                    title={data[movie].title}\n                                    year={movie.year}\n                                    rated={movie.rated}\n                                    awards={movie.awards}\n                                />\n                            )\n                        }))\n                }\n            </div>\n\n\n\n        </>\n    )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}